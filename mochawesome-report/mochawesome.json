{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2024-06-19T13:36:46.184Z",
    "end": "2024-06-19T13:37:17.177Z",
    "duration": 30993,
    "testsRegistered": 11,
    "passPercent": 54.54545454545454,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 5,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "5b29408f-a256-45be-b3ce-ffd17015bf3e",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "10687ce7-7e5e-4328-8a86-4cf109eb0c04",
          "title": "Tests_for_account_functionality",
          "fullFile": "C:\\Users\\Okechi\\Desktop\\Javascript\\Projects\\Selenium\\tests\\accountFunctionalityTest.js",
          "file": "\\tests\\accountFunctionalityTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Successfully registers a user and deletes account",
              "fullTitle": "Tests_for_account_functionality Successfully registers a user and deletes account",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Launch the chrome browser\n        let driver = await new Builder().forBrowser(\"chrome\").build();\n        //Create user function\n        await createUser(driver)\n        //Click delete account\n        await driver.findElement(By.xpath(\"//ul[@class='nav navbar-nav']/li[5]\")).click();\n        //Check if account was deleted succesfully\n        const afterAccDeletion = await driver.findElement(By.xpath(\"//div/h2[@class='title text-center']\")).getText();\n        \n        expect(afterAccDeletion).to.equal(\"ACCOUNT DELETED!\");\n        //Click continue\n        await driver.findElement(By.className(\"btn btn-primary\")).click();\n        //Close the browser\n        await driver.close();",
              "err": {},
              "uuid": "b74f3a08-fe65-4533-b8ad-050494a55868",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Successfully registers a user",
              "fullTitle": "Tests_for_account_functionality Successfully registers a user",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Launch the chrome browser\n        let driver = await new Builder().forBrowser(\"chrome\").build();\n        \n        //Create user function\n        await createUser(driver);\n    \n        //Close the browser\n        await driver.close();",
              "err": {},
              "uuid": "b07902e1-0b56-4a6c-8b59-16d82e946d3a",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Successfully logs in a user with incorrect details",
              "fullTitle": "Tests_for_account_functionality Successfully logs in a user with incorrect details",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Launch the chrome browser\n        let driver = await new Builder().forBrowser(\"chrome\").build();\n        //Moves browser window \n        await driver.manage().window().setRect({x: 10, y: -1440 });\n        \n        //Navigate to the webpage\n        await driver.get(webSite);\n        \n        //Is there a consent pop up, if there is select consent to close\n        const isConsentPopupVisible = await driver.findElement(By.className(\"fc-button fc-cta-consent fc-primary-button\")).isDisplayed();\n        if (isConsentPopupVisible) await driver.findElement(By.className(\"fc-button fc-cta-consent fc-primary-button\", Key.RETURN)).click();\n        //Select \"Signup/Login\"\n        await driver.findElement(By.className(\"fa fa-lock\", Key.RETURN)).click()\n        \n        //Is signup form visible\n        const isLoginVisible = await driver.findElement(By.className(\"login-form\")).isDisplayed();\n        if (isLoginVisible) {\n            //Enter Email and password\n            await driver.findElement(By.xpath(\"//div[@class='login-form']/form/input[2]\")).sendKeys(accountDetails.email)\n            await driver.findElement(By.xpath(\"//div[@class='login-form']/form/input[3]\")).sendKeys(accountDetails.password+\"s\")\n        };\n        //Find submit button and click\n        await driver.findElement(By.xpath(\"//div[@class='login-form']/form/button\", Key.RETURN)).click()\n        //Get login error text\n        const loginErrorVisible = await driver.findElement(By.xpath(\"//div[@class='login-form']/form/p\")).getText();\n        //Chai assert comparing error text to stored variable\n        expect(loginErrorVisible).to.equal(loginError);\n        //Close the browser\n        await driver.close();",
              "err": {},
              "uuid": "0cba552a-baf6-4e92-9525-fd7e101106cd",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Successfully logs in a registerd a user with correct details and logs the user out",
              "fullTitle": "Tests_for_account_functionality Successfully logs in a registerd a user with correct details and logs the user out",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Launch the chrome browser\n        let driver = await new Builder().forBrowser(\"chrome\").build();\n        \n        //Logs in the user\n        await userLogin(driver);\n        //Logs the user out\n        await driver.findElement(By.xpath(\"//ul[@class='nav navbar-nav']/li[4]/a/i\")).click();\n        const loginPageCheck = await driver.getCurrentUrl();\n        //Chai assert to check if user has been logged out\n        expect(loginPageCheck).to.equal(\"https://www.automationexercise.com/login\")\n        //Close the browser\n        await driver.close();",
              "err": {},
              "uuid": "a230e784-4829-49be-8f2e-aee9736fa32f",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Successfully logs in a registerd a user with correct details and deletes the users account",
              "fullTitle": "Tests_for_account_functionality Successfully logs in a registerd a user with correct details and deletes the users account",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Launch the chrome browser\n        let driver = await new Builder().forBrowser(\"chrome\").build();\n        \n        //Logs in the user\n        await userLogin(driver);\n        \n        //Click delete account\n        await driver.findElement(By.xpath(\"//ul[@class='nav navbar-nav']/li[5]\")).click();\n        await adHandler(driver);\n        //Check if account was deleted succesfully\n        const afterAccDeletion = await driver.findElement(By.xpath(\"//div/h2[@class='title text-center']\")).getText();\n        \n        expect(afterAccDeletion).to.equal(\"ACCOUNT DELETED!\");\n        //Click continue\n        await driver.findElement(By.className(\"btn btn-primary\")).click();\n        \n        //Close the browser\n        await driver.close();",
              "err": {},
              "uuid": "024b3d50-9496-48b0-b5d0-0055db824251",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "b74f3a08-fe65-4533-b8ad-050494a55868",
            "b07902e1-0b56-4a6c-8b59-16d82e946d3a",
            "0cba552a-baf6-4e92-9525-fd7e101106cd",
            "a230e784-4829-49be-8f2e-aee9736fa32f",
            "024b3d50-9496-48b0-b5d0-0055db824251"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "5f950d55-2d1c-43c2-b467-4ebb0b4499c6",
          "title": "Tests_for_Website_functionality",
          "fullFile": "C:\\Users\\Okechi\\Desktop\\Javascript\\Projects\\Selenium\\tests\\webpageFunctionalityTests.js",
          "file": "\\tests\\webpageFunctionalityTests.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Succesfully uses the Contact Us form and navigates to home using the button in page body",
              "fullTitle": "Tests_for_Website_functionality Succesfully uses the Contact Us form and navigates to home using the button in page body",
              "timedOut": false,
              "duration": 5493,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Launch Browswer    \n        let driver = new Builder().forBrowser(\"chrome\").build();\n        //Moves browser window \n        await driver.manage().window().setRect({x: 10, y: -1440 });\n        \n        //Navigate to the webpage\n        await driver.get(webSite);\n        //Is there a consent pop up, if there is select consent to close\n        const isConsentPopupVisible = await driver.findElement(By.className(\"fc-button fc-cta-consent fc-primary-button\")).isDisplayed();\n        if (isConsentPopupVisible) await driver.findElement(By.className(\"fc-button fc-cta-consent fc-primary-button\", Key.RETURN)).click();\n        //Click contact us link\n        await driver.findElement(By.className(\"fa fa-envelope\")).click();\n        //Is contact us form visible\n        let isContactUsFormVisible = await driver.findElement(By.id(\"contact-us-form\")).isDisplayed();\n        //Chai assert to check if contact us form is visible\n        expect(isContactUsFormVisible).to.equal(true);\n        //Send form information\n        await driver.findElement(By.xpath(\"//input[@class='form-control'][@name='name']\")).sendKeys(contactUsDetails.first_name);\n        await driver.findElement(By.xpath(\"//input[@class='form-control'][@name='email']\")).sendKeys(contactUsDetails.email);\n        await driver.findElement(By.xpath(\"//input[@class='form-control'][@name='subject']\")).sendKeys(contactUsDetails.subject);\n        await driver.findElement(By.xpath(\"//textarea[@class='form-control'][@name='message']\")).sendKeys(contactUsDetails.message);\n        await driver.findElement(By.xpath(\"//input[@class='form-control'][@name='upload_file']\")).sendKeys(upload);\n        await driver.findElement(By.xpath(\"//input[@class='btn btn-primary pull-left submit_form']\")).click();\n        //Select alert\n        let alert = await driver.switchTo().alert();\n        //Confirm alert text\n        let alertText = await alert.getText();\n        expect(alertText).to.equal(\"Press OK to proceed!\")\n        \n        //Accept alert\n        await alert.accept();\n        //Is success message visible\n        let isSuccessMessageVisible = await driver.findElement(By.className(\"status alert alert-success\")).isDisplayed()\n        //Chai assert to confirm success message\n        expect(isSuccessMessageVisible).to.equal(true);\n        //Click home Button in page body\n        await driver.findElement(By.className(homeArr[0])).click();\n        //Confirm home page is loaded\n        let logoIsVisible = await driver.findElement(By.className(\"logo pull-left\")).isDisplayed();\n        expect(logoIsVisible).to.equal(true);\n        //Close browser\n        await driver.close()",
              "err": {},
              "uuid": "842cb256-4640-44c2-a5cd-21eed826c0d0",
              "parentUUID": "5f950d55-2d1c-43c2-b467-4ebb0b4499c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Succesfully uses the Contact Us form and navigates to home using the button in navigation bar",
              "fullTitle": "Tests_for_Website_functionality Succesfully uses the Contact Us form and navigates to home using the button in navigation bar",
              "timedOut": false,
              "duration": 4969,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Launch Browswer    \n        let driver = new Builder().forBrowser(\"chrome\").build();\n        //Moves browser window \n        await driver.manage().window().setRect({x: 10, y: -1440 });\n        //Navigate to the webpage\n        await driver.get(webSite);\n        //Is there a consent pop up, if there is select consent to close\n        const isConsentPopupVisible = await driver.findElement(By.className(\"fc-button fc-cta-consent fc-primary-button\")).isDisplayed();\n        if (isConsentPopupVisible) await driver.findElement(By.className(\"fc-button fc-cta-consent fc-primary-button\", Key.RETURN)).click();\n        //Click contact us link\n        await driver.findElement(By.className(\"fa fa-envelope\")).click();\n        //Is contact us form visible\n        let isContactUsFormVisible = await driver.findElement(By.id(\"contact-us-form\")).isDisplayed();\n        //Chai assert to check if contact us form is visible\n        expect(isContactUsFormVisible).to.equal(true);\n        //Send form information\n        await driver.findElement(By.xpath(\"//input[@class='form-control'][@name='name']\")).sendKeys(contactUsDetails.first_name);\n        await driver.findElement(By.xpath(\"//input[@class='form-control'][@name='email']\")).sendKeys(contactUsDetails.email);\n        await driver.findElement(By.xpath(\"//input[@class='form-control'][@name='subject']\")).sendKeys(contactUsDetails.subject);\n        await driver.findElement(By.xpath(\"//textarea[@class='form-control'][@name='message']\")).sendKeys(contactUsDetails.message);\n        await driver.findElement(By.xpath(\"//input[@class='form-control'][@name='upload_file']\")).sendKeys(upload);\n        await driver.findElement(By.xpath(\"//input[@class='btn btn-primary pull-left submit_form']\")).click();\n        //Select alert\n        let alert = await driver.switchTo().alert();\n        //Confirm alert text\n        let alertText = await alert.getText();\n        expect(alertText).to.equal(\"Press OK to proceed!\")\n        \n        //Accept alert\n        await alert.accept();\n        //Is success message visible\n        let isSuccessMessageVisible = await driver.findElement(By.className(\"status alert alert-success\")).isDisplayed()\n        //Chai assert to confirm success message\n        expect(isSuccessMessageVisible).to.equal(true);\n        //Click home Button in page body\n        await driver.findElement(By.className(homeArr[1])).click();\n        //Confirm home page is loaded\n        let logoIsVisible = await driver.findElement(By.className(\"logo pull-left\")).isDisplayed();\n        expect(logoIsVisible).to.equal(true);\n        //Close browser\n        await driver.close()",
              "err": {},
              "uuid": "091753b4-b3f6-435c-9b4d-5ec4b0128d87",
              "parentUUID": "5f950d55-2d1c-43c2-b467-4ebb0b4499c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Sucessfully navigates to the test cases page",
              "fullTitle": "Tests_for_Website_functionality Sucessfully navigates to the test cases page",
              "timedOut": false,
              "duration": 4628,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Launch Browswer    \nlet driver = new Builder().forBrowser(\"chrome\").build();\n\n//Moves browser window \nawait driver.manage().window().setRect({x: 10, y: -1440 });\n\n//Navigate to the webpage\nawait driver.get(webSite);\n//Is there a consent pop up, if there is select consent to close\nconst isConsentPopupVisible = await driver.findElement(By.className(\"fc-button fc-cta-consent fc-primary-button\")).isDisplayed();\nif (isConsentPopupVisible) await driver.findElement(By.className(\"fc-button fc-cta-consent fc-primary-button\", Key.RETURN)).click();\n//Navigate to test cases page\nawait driver.findElement(By.xpath(\"//div[@class='item active']/div/a[@class='test_cases_list']\")).click();\n//Confirm test case page is visible\nlet isTestCasePageVisible = await driver.findElement(By.className(\"title text-center\")).isDisplayed();\nexpect(isTestCasePageVisible).to.equal(true);\nawait driver.close();",
              "err": {},
              "uuid": "ca38995a-b99d-411c-a0ca-d1f3c26d7dbb",
              "parentUUID": "5f950d55-2d1c-43c2-b467-4ebb0b4499c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Sucessfully navigates to the products page and views the first product",
              "fullTitle": "Tests_for_Website_functionality Sucessfully navigates to the products page and views the first product",
              "timedOut": false,
              "duration": 6343,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Launch browser\n        let driver = await new Builder().forBrowser(\"chrome\").build();\n        //Moves browser window \n        await driver.manage().window().setRect({x: 10, y: -1440 });\n        //Navigate to the webpage\n        await driver.get(webSite);\n        //Is there a consent pop up, if there is select consent to close\n        const isConsentPopupVisible = await driver.findElement(By.className(\"fc-button fc-cta-consent fc-primary-button\")).isDisplayed();\n        if (isConsentPopupVisible) await driver.findElement(By.className(\"fc-button fc-cta-consent fc-primary-button\", Key.RETURN)).click();\n        //Navigate to products page\n        await driver.findElement(By.className(\"material-icons card_travel\")).click();\n        //Confirm products page is visible\n        let isProductsPageVisible = await driver.findElement(By.className(\"title text-center\")).isDisplayed();\n        expect(isProductsPageVisible).to.equal(true);\n        //Product information\n        let productName = await driver.findElement(By.xpath(\"//div[@class='features_items']/div[@class='col-sm-4'][1]/div/div/div/p\")).getText()\n        let productPrice = await driver.findElement(By.xpath(\"//div[@class='features_items']/div[@class='col-sm-4'][1]/div/div/div/h2\")).getText()\n        //View first product\n        await driver.findElement(By.xpath(\"//div[@class='features_items']/div[@class='col-sm-4'][1]/div/div[@class='choose']\")).click();\n        await adHandler(driver)\n        //Product page information\n        let productDetailsName = await driver.findElement(By.xpath(\"//div[@class='product-information']/h2\")).getText()\n        let productDetailsPrice = await driver.findElement(By.xpath(\"//div[@class='product-information']/span/span\")).getText()\n        //Check if its the correct product\n        expect(productName).to.equal(productDetailsName);\n        expect(productPrice).to.equal(productDetailsPrice);\n        //Close browser\n        await driver.close();",
              "err": {},
              "uuid": "006b1bb8-9601-4cae-8896-cb3e8fac1ed8",
              "parentUUID": "5f950d55-2d1c-43c2-b467-4ebb0b4499c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Sucessfully uses the search function to find a product",
              "fullTitle": "Tests_for_Website_functionality Sucessfully uses the search function to find a product",
              "timedOut": false,
              "duration": 6577,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Launch Browswer    \n        const driver = new Builder().forBrowser(\"chrome\").build();\n        //Moves browser window \n        await driver.manage().window().setRect({x: 10, y: -1440 });\n        \n        //Navigate to the webpage\n        await driver.get(webSite);\n        //Is there a consent pop up, if there is select consent to close\n        const isConsentPopupVisible = await driver.findElement(By.className(\"fc-button fc-cta-consent fc-primary-button\")).isDisplayed();\n        if (isConsentPopupVisible) await driver.findElement(By.className(\"fc-button fc-cta-consent fc-primary-button\", Key.RETURN)).click();\n        //Navigate to products page\n        await driver.findElement(By.className(\"material-icons card_travel\")).click();\n        //Confirm products page is visible\n        const isProductsPageVisible = await driver.findElement(By.className(\"title text-center\")).isDisplayed();\n        expect(isProductsPageVisible).to.equal(true);\n        //Gather product name information\n        const getProductName = async (browser) =>{\n            const products = await browser.findElements(By.xpath(\"//div[@class='productinfo text-center']/p\"));\n            const rngProduct = Math.floor(Math.random() * products.length);\n            const productName = await products[rngProduct].getText();\n            console.log(productName);\n            return productName;\n        };\n        const returnedProductName = await getProductName(driver)\n        //Search for random product \n        await driver.findElement(By.id(\"search_product\")).sendKeys(returnedProductName);\n        await driver.findElement(By.id(\"submit_search\")).click();\n        \n        //Product page information\n        const productNameConfirm = await driver.findElement(By.xpath(\"//div[@class='productinfo text-center']/p\")).getText();\n        expect(productNameConfirm).to.equal(returnedProductName);\n        //Close browser\n        await driver.close();",
              "err": {},
              "uuid": "71804c7f-13b5-4799-bd81-be8cb70a3aed",
              "parentUUID": "5f950d55-2d1c-43c2-b467-4ebb0b4499c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Successfully uses the subscribe for recent updates function",
              "fullTitle": "Tests_for_Website_functionality Successfully uses the subscribe for recent updates function",
              "timedOut": false,
              "duration": 2976,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Launch Browswer    \nlet driver = new Builder().forBrowser(\"chrome\").build();\n//Moves browser window \nawait driver.manage().window().setRect({x: 10, y: -1440 });\n\n//Navigate to the webpage\nawait driver.get(webSite);\n//Is there a consent pop up, if there is select consent to close\nconst isConsentPopupVisible = await driver.findElement(By.className(\"fc-button fc-cta-consent fc-primary-button\")).isDisplayed();\nif (isConsentPopupVisible) await driver.findElement(By.className(\"fc-button fc-cta-consent fc-primary-button\", Key.RETURN)).click();\n//Find and scroll to the subscribe box\nconst subscribeBox = await driver.findElement(By.id(\"susbscribe_email\"));\nawait driver.actions().scroll(0,0,0,200, subscribeBox).perform();\n//Enter email information\nawait driver.findElement(By.id(\"susbscribe_email\")).sendKeys(contactUsDetails.email);\nawait driver.findElement(By.id(\"subscribe\")).click();\n//confirm subscription\nconst subscribeConfirm = await driver.findElement(By.className(\"alert-success alert\")).isDisplayed();\nexpect(subscribeConfirm).to.equal(true);\n//Close browser\nawait driver.close()",
              "err": {},
              "uuid": "22df8315-123e-4ee2-8669-bbfa3029a801",
              "parentUUID": "5f950d55-2d1c-43c2-b467-4ebb0b4499c6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "842cb256-4640-44c2-a5cd-21eed826c0d0",
            "091753b4-b3f6-435c-9b4d-5ec4b0128d87",
            "ca38995a-b99d-411c-a0ca-d1f3c26d7dbb",
            "006b1bb8-9601-4cae-8896-cb3e8fac1ed8",
            "71804c7f-13b5-4799-bd81-be8cb70a3aed",
            "22df8315-123e-4ee2-8669-bbfa3029a801"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 30986,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}